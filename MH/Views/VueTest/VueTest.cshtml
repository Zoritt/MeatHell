
@{
    ViewData["Title"] = "VueTest";
}

@section Scripts{
    <script src="~/lib/vue/vue.js"></script>    
    }
    <h2>VueTest</h2>


    <head>
        <meta charset="utf-8" />
        
        <style>
            body {
                background-color: #80c1ff;
            }

            h1 {
                color: white;
                text-align: center;
            }

            table.calendar {
                color: white;
                width: 100%;
                height: 600px;
                table-layout: fixed;
            }

            table.dayTasks {
                width: 100%
            }

            td.calendarDay {
                background-color: #b3daff;
                text-align: left;
                vertical-align: top;
                width: 14%;
                height: 16%;
            }

            td.dayTasks {
                width: 100%
            }

            button.dayTasks {
                background-color: #b3daff;
            }

            select.dayNewTask {
                background-color: #80c1ff;
                color: white;
                width: 100%;
            }

            div.dayNewTask {
            }

            table.allTasks {
                color: white;
            }

                table.allTasks th, td {
                    border-bottom: 1px solid #ddd;
                }

                    td.number {
                        text-align: right;
                    }

                    td.newTask input, button {
                        width: 99%;
                    }
        </style>
    </head>
    <body>

        <script lang="javascript">

		Vue.component("calendar-day",{
			props:["day"],
			template:"<td class='calendarDay'><div>{{day.date.getUTCDate()}}</div><div><table class='dayTasks'><tr v-for='task in day.dayTasks'><td class='dayTasks'>{{task}}</td><td><button class='dayTasks' v-on:click=\"$emit('remove-day',task,day.date)\">X</button></td></tr></table></div><div class='dayNewTask'><select class='dayNewTask' v-on:change.prevent=\"$emit('add-day',$event.target.value,day.date)\"><option v-for='(task,idx) in day.otherTasks' v-bind:selected='idx==0' v-bind:disabled='idx==0'>{{task}}</option></select></div></td>"
		});
        </script>

        <h1>Streak Calendar</h1>
        <div id="app">
            <input type="date" v-model="calendarDate" />
            <table class="calendar">
                <thead>
                    <tr>
                        <th>Mon</th>
                        <th>Tue</th>
                        <th>Wed</th>
                        <th>Thu</th>
                        <th>Fri</th>
                        <th>Sat</th>
                        <th>Sun</th>
                    </tr>
                </thead>
                <tbody>
                    <tr v-for="week in calendar">
                        <td is="calendar-day"
                            v-for="day in week"
                            v-bind:day="day"
                            v-bind:key="day.date.toISOString()"
                            v-on:remove-day='removeDay'
                            v-on:add-day='addDay' />
                    </tr>
                </tbody>
            </table>
            <br />
            <table class="allTasks">
                <thead>
                    <tr>
                        <th>Task name</th>
                        <th>Total count</th>
                        <th>Longest streak</th>
                        <th></th>
                    </tr>
                </thead>
                <tbody>
                    <tr v-for="(task,idx) in tasks">
                        <td>{{task.name}}</td>
                        <td class='number'>{{task.dates.length}}</td>
                        <td class='number'>{{task.longest}}</td>
                        <td><button v-on:click="removeTask(idx)">Remove</button></td>
                    </tr>
                    <tr>
                        <td colspan="3" class='newTask'><input v-model.trim="newTaskName" placeholder="New task"></td>
                        <td><button v-on:click="addTask()">Create</button></td>
                    </tr>
                </tbody>
            </table>
        </div>

        <script lang="javascript">

            function addDaysToDate(date, days) {
                var d = new Date(date.getTime());
                return d.setTime(864E5 * days + date.valueOf()) && d;
            };
            function equalDates(a, b) {
                return a.getUTCFullYear() == b.getUTCFullYear()
                    && a.getUTCMonth() == b.getUTCMonth()
                    && a.getUTCDate() == b.getUTCDate();
            }

            function longestStreak(dates) {
                if (dates.length == 0)
                    return 0;

                var currentStreak = 1;
                var longestStreak = 1;
                var lastDate = dates[0];
                for (i = 1; i < dates.length; i++) {
                    var d = dates[i];
                    if (equalDates(lastDate, addDaysToDate(d, -1)))
                        currentStreak++;
                    else {
                        if (currentStreak > longestStreak)
                            longestStreak = currentStreak;
                        currentStreak = 1;
                    }
                    lastDate = d;
                }
                if (currentStreak > longestStreak)
                    longestStreak = currentStreak;

                return longestStreak;
            }

            var app = new Vue({
                el: '#app',
                data: {
                    calendarDate: new Date(),
                    tasks: [
                        {
                            name: "programowanie",
                            longest: 3,
                            dates: [new Date(Date.UTC(2019, 0, 1)), new Date(Date.UTC(2019, 0, 02)), new Date(Date.UTC(2019, 0, 3))]
                        },
                        {
                            name: "gimnastyka",
                            longest: 2,
                            dates: [new Date(Date.UTC(2019, 0, 1)), new Date(Date.UTC(2019, 0, 22)), new Date(Date.UTC(2019, 0, 23))]
                        },
                        {
                            name: "gra na gitarze",
                            longest: 0,
                            dates: []
                        }
                    ],
                    newTaskName: ""
                },
                computed: {
                    calendar: function () {
                        var calendarDate = new Date(this.calendarDate);
                        var firstOfMonth = new Date(Date.UTC(calendarDate.getUTCFullYear(), calendarDate.getUTCMonth(), 1));
                        var daysFromMonday = firstOfMonth.getUTCDay() == 0 ? 1 : firstOfMonth.getUTCDay() - 1;
                        var firstDay = addDaysToDate(firstOfMonth, -daysFromMonday);
                        var weeks = [];
                        for (i = 0; i < 6; i++) {
                            var days = []
                            for (j = 0; j < 7; j++) {
                                var day = addDaysToDate(firstDay, i * 7 + j);

                                var dayTasks = [];
                                var otherTasks = ["Add task"];
                                for (t of this.tasks) {
                                    var notPresent = true;
                                    for (d of t.dates)
                                        if (equalDates(d, day)) {
                                            dayTasks.push(t.name);
                                            notPresent = false;
                                        }
                                    if (notPresent)
                                        otherTasks.push(t.name);

                                }
                                days.push({ date: day, dayTasks: dayTasks, otherTasks: otherTasks });
                            }
                            weeks.push(days);
                        }
                        return weeks;
                    }
                },
                methods: {
                    removeTask: function (idx) {
                        this.tasks.splice(idx, 1);
                    },
                    addTask: function () {
                        if (this.newTaskName.length == 0) {
                            alert("Task name must not be empty.");
                            return;
                        }
                        var newTaskUpper = this.newTaskName.toUpperCase();
                        for (t of this.tasks) {
                            if (t.name.toUpperCase() == newTaskUpper) {
                                alert("Task named '" + this.newTaskName + "' already exists");
                                return;
                            }
                        }
                        this.tasks.push({ name: this.newTaskName, longest: 0, dates: [] });
                        this.newTaskName = "";
                    },
                    removeDay: function (task, day) {
                        for (t of this.tasks)
                            if (t.name == task)
                                for (i = 0; i < t.dates.length; i++)
                                    if (equalDates(t.dates[i], day)) {
                                        t.dates.splice(i, 1);
                                        t.longest = longestStreak(t.dates);
                                        return;
                                    };
                        return;

                    },
                    addDay: function (task, day) {
                        for (t of this.tasks)
                            if (t.name == task) {
                                for (i = 0; i < t.dates.length; i++)
                                    if (equalDates(t.dates[i], day))
                                        return;
                                t.dates.push(day);
                                t.dates.sort(function (a, b) { return a - b });
                                t.longest = longestStreak(t.dates);
                            }
                        return;
                    }
                }
            })
        </script>
    </body>
